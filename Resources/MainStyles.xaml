<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:hlyWPF="http://schemas.hpod9.com/haley/wpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="MyBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="#E31E00" BorderThickness="1" Margin="1 1 2 0" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border.Background>
                            <SolidColorBrush x:Name="bgBrush" Color="#2E2E31" />
                        </Border.Background>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="bgBrush"
                                                        Storyboard.TargetProperty="Color" To="#E31E00"
                                                        Duration="0:0:0.250" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="bgBrush"
                                                        Storyboard.TargetProperty="Color" To="#2E2E31"
                                                        Duration="0:0:0.250" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E31E00" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <Style x:Key="Body">
        <Setter Property="Control.Margin" Value="0" />
        <Setter Property="Control.FontFamily" Value="Verdana" />
        <Setter Property="Control.Background" Value="#3A3940" />
        <Setter Property="Border.BorderThickness" Value="0" />
        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
    </Style>

    <Style x:Key="Frame">
        <Setter Property="Control.FontFamily" Value="Verdana" />
        <Setter Property="Control.Background" Value="Transparent" />
        <Setter Property="Border.BorderThickness" Value="0" />
    </Style>


    <Style x:Key="MyLabel">
        <Setter Property="Control.FontFamily" Value="Verdana" />
        <Setter Property="Control.FontSize" Value="15" />
        <Setter Property="Control.Foreground" Value="#E31E00" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MyInput" TargetType="TextBox">
        <Setter Property="Background" Value="#E3B1B4"></Setter>
        <!-- <Setter Property="Template"> -->
        <!--     <Setter.Value> -->
        <!--         <ControlTemplate TargetType="{x:Type TextBox}"> -->
        <!--              -->
        <!--             <Border BorderBrush="Black" BorderThickness="1" Margin="1 1 2 0" CornerRadius="3"> -->
        <!--                 <TextBox.Background> -->
        <!--                     <SolidColorBrush x:Name="bgBrush" Color="#2E2E31" /> -->
        <!--                 </TextBox.Background> -->
        <!--             </Border> -->
        <!-- -->
        <!--         </ControlTemplate> -->
        <!--     </Setter.Value> -->
        <!-- </Setter> -->
    </Style>

    <Style x:Key="FlatButton">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Foreground" Value="Red" />
        <Setter Property="Control.Cursor" Value="Hand" />
        
    </Style>
    

    <Style x:Key="MyListBox" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="MyComboBox" TargetType="{x:Type ComboBox}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="0" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="8*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="3" Background="Beige"
                                                BorderBrush="Black" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"
                                                Background="#E3B1B4" BorderBrush="Black" BorderThickness="1" />
                                        <Path x:Name="Arrow" Grid.Column="1" Fill="Black" HorizontalAlignment="Center"
                                              VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#E3B1B4" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#E3B1B4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Grid.Column="0" Name="ContentSite" IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3" />
                        <TextBox Grid.Column="0" x:Name="PART_EditableTextBox" Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Grid.Column="0" Name="Popup" Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#E3B1B4" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Title Bar Buttons-->

    <Style x:Key="TitleBarButton"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Width"
                Value="46" />
        <Setter Property="Foreground"
                Value="{StaticResource Gray900Brush}" />
        <Setter Property="Background"
                Value="{StaticResource Gray900Brush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Gray900Brush}" />
    </Style>

    <Style x:Key="MinimizeButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource Gray700Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximizeButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource Gray700Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{StaticResource Gray900Brush}" />
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image

                                        Source="pack://application:,,,/UI/Icons/close-icon.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource RedBrush}" />
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image
                                        Source="pack://application:,,,/UI/Icons/close-icon-white.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>